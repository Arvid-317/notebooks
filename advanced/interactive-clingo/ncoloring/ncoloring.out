?- load ncoloring.lp

?- solve
Model: []
SAT

?- assert edge(1,2)

?- assert edge(1,4)

?- assert edge(2,3)

?- assert edge(3,4)

?- assume mark(1,1)

?- solve
Model: [mark(1,1), mark(2,3), mark(3,2), mark(4,3)]
SAT

?- cancel mark(1,1)

?- option -n 0

?- assume mark(1,1)

?- solve
Model: [mark(1,1), mark(2,3), mark(3,2), mark(4,3)]
Model: [mark(1,1), mark(2,3), mark(3,1), mark(4,3)]
Model: [mark(1,1), mark(2,2), mark(3,1), mark(4,3)]
Model: [mark(1,1), mark(2,3), mark(3,1), mark(4,2)]
Model: [mark(1,1), mark(2,2), mark(3,1), mark(4,2)]
Model: [mark(1,1), mark(2,2), mark(3,3), mark(4,2)]
SAT

?- cancel mark(1,1)

?- option -e brave

?- assume mark(1,1)

?- solve
Model: [mark(1,1), mark(2,2), mark(2,3), mark(3,1), mark(3,2), mark(3,3), mark(4,2), mark(4,3)]
SAT

?- cancel mark(1,1)

?- option -e cautious

?- assume mark(1,1)

?- solve
Model: [mark(1,1)]
SAT

?- cancel mark(1,1)

?- option -e auto

?- add query1 :- mark(1,1), 1 { mark(3,2); not mark(4,2) }.

?- assume query1

?- solve
Model: [mark(1,1), mark(2,3), mark(3,1), mark(4,3)]
Model: [mark(1,1), mark(2,3), mark(3,2), mark(4,3)]
Model: [mark(1,1), mark(2,2), mark(3,1), mark(4,3)]
SAT

?- cancel query1

?- assert edge(2,4)

?- assume query1

?- solve
Model: [mark(1,1), mark(2,2), mark(3,1), mark(4,3)]
SAT

?- cancel query1

?- open edge(2,4)

?- assume query1

?- solve
Model: [mark(1,1), mark(2,3), mark(3,1), mark(4,3)]
Model: [mark(1,1), mark(2,3), mark(3,2), mark(4,3)]
Model: [mark(1,1), mark(2,2), mark(3,1), mark(4,3)]
Model: [mark(1,1), mark(2,2), mark(3,1), mark(4,3)]
SAT

?- cancel query1

?- retract edge(2,4)

?- assume query1

?- solve
Model: [mark(1,1), mark(2,3), mark(3,1), mark(4,3)]
Model: [mark(1,1), mark(2,3), mark(3,2), mark(4,3)]
Model: [mark(1,1), mark(2,2), mark(3,1), mark(4,3)]
SAT

?- cancel query1

?- assume not mark(2,3)

?- assume mark(1,1)

?- solve
Model: [mark(1,1), mark(2,2), mark(3,1), mark(4,3)]
Model: [mark(1,1), mark(2,2), mark(3,3), mark(4,2)]
Model: [mark(1,1), mark(2,2), mark(3,1), mark(4,2)]
SAT

?- cancel mark(1,1)

?- assume query1

?- solve
Model: [mark(1,1), mark(2,2), mark(3,1), mark(4,3)]
SAT

?- cancel query1

?- cancel not mark(2,3)

?- add #external elim(X,C) : X = 1..m, color(C).

?- add :- edge(X,Y), elim(X,C), mark(Y,C).

?- add :- edge(X,Y), mark(X,C), elim(Y,C).

?- assert elim(2,3)

?- assert elim(4,2)

?- add query2 :- mark(X,1), elim(X,C).

?- assume query2

?- solve
UNSAT

?- cancel query2

?- add query3 :- mark(X,C), elim(X,C).

?- assume query3

?- solve
Model: [mark(1,1), mark(2,3), mark(3,1), mark(4,3)]
Model: [mark(1,1), mark(2,3), mark(3,1), mark(4,2)]
Model: [mark(1,1), mark(2,2), mark(3,1), mark(4,2)]
SAT

?- cancel query3

?- add #minimize{ C@X : mark(X,C), X =1..3 }.

?- solve
Model: [mark(1,1), mark(2,3), mark(3,1), mark(4,3)]
Model: [mark(1,1), mark(2,2), mark(3,1), mark(4,3)]
Model: [mark(1,1), mark(2,3), mark(3,1), mark(4,2)]
Model: [mark(1,1), mark(2,2), mark(3,1), mark(4,2)]
SAT

?- opt-on

?- solve
Model: [mark(1,1), mark(2,2), mark(3,1), mark(4,3)]
Model: [mark(1,1), mark(2,2), mark(3,1), mark(4,2)]
SAT

?- assume not mark(2,2)

?- solve
Model: [mark(1,1), mark(2,3), mark(3,1), mark(4,3)]
Model: [mark(1,1), mark(2,3), mark(3,1), mark(4,2)]
SAT

?- cancel not mark(2,2)

?- opt-off

?- solve
Model: [mark(1,1), mark(2,3), mark(3,1), mark(4,3)]
Model: [mark(1,1), mark(2,2), mark(3,1), mark(4,3)]
Model: [mark(1,1), mark(2,3), mark(3,1), mark(4,2)]
Model: [mark(1,1), mark(2,2), mark(3,1), mark(4,2)]
SAT

?- show-add edge/2

?- hide-add mark/2

?- solve 
Model: [edge(1,2), edge(1,4), edge(2,3), edge(3,4)]
Model: [edge(1,2), edge(1,4), edge(2,3), edge(3,4)]
Model: [edge(1,2), edge(1,4), edge(2,3), edge(3,4)]
Model: [edge(1,2), edge(1,4), edge(2,3), edge(3,4)]
SAT

?- show-remove edge/2

?- hide-remove mark/2

?- solve 
Model: [mark(1,1), mark(2,3), mark(3,1), mark(4,3)]
Model: [mark(1,1), mark(2,2), mark(3,1), mark(4,3)]
Model: [mark(1,1), mark(2,3), mark(3,1), mark(4,2)]
Model: [mark(1,1), mark(2,2), mark(3,1), mark(4,2)]
SAT

?- exit
